package com.pzk.community.mapper;

import com.pzk.community.dto.CommentUserDto;
import com.pzk.community.model.Comment;
import com.pzk.community.model.CommentExample;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.session.RowBounds;
import org.springframework.stereotype.Repository;

@Repository
public interface CommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    long countByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    int deleteByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    int insert(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    int insertSelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    List<Comment> selectByExampleWithRowbounds(CommentExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    List<Comment> selectByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    Comment selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    int updateByExampleSelective(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    int updateByExample(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    int updateByPrimaryKeySelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Tue Feb 18 16:51:50 CST 2020
     */
    int updateByPrimaryKey(Comment record);

    /**
     * 根据parentid和type 找到comment+user  并按时间倒序
     * @param parentId
     * @return
     */
    @Select("select * from comment where parent_id=#{parentId} and type=#{type} order by gmt_create desc")
    @Results(id="commentMap",value = { @Result(id=true,property = "id",column = "id"),
            @Result(property = "parentId",column = "parent_id"),
            @Result(property = "type",column = "type"),
            @Result(property = "commentator",column = "commentator"),
            @Result(property = "gmtCreate",column = "gmt_create"),
            @Result(property = "gmtModified",column = "gmt_modified"),
            @Result(property = "likeCount",column = "like_count"),
            @Result(property = "content",column = "content"),
            @Result(property = "user",column = "commentator",one = @One(select = "com.pzk.community.mapper.UserMapper.selectById",fetchType = FetchType.LAZY))
    })
    List<CommentUserDto> selectByParentIdAndType(@Param("parentId") Long parentId,
                                                 @Param("type") Integer type);
}